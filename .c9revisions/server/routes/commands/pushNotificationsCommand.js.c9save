{"ts":1378905301749,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1378905304273,"patch":[[{"diffs":[[1,"var querystring = require('querystring'),\n    http = require('http');\n\nexports.sendNotification = function(req, res){\n\n    console.log(\"API send notification\");\n    for (var i = 0; i < req.params.length; i++) {\n        console.log(\"param = \" + req.param[i]);\n    }\n    console.log(\"Req.Body = \" + req.body.title);\n    \n    console.log(\"Text : \" + req.params.titleText);\n    console.log(\"Message : \" + req.params.messageText);\n    \n\n\n    var data = querystring.stringify({\n        'email' : 'antb59@gmail.com',\n        'notification[from_screen_name]': 'Hello',\n        'notification[message]': 'This is an example',\n        'notification[icon_url]': 'http://helena-test.antb59.c9.io/img/robot_eve.png'\n    });\n\n    var options = {\n        host: 'boxcar.io',\n        port: 80,\n        path: '/devices/providers/O89HcibBYhhqUG49ipk3/notifications',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Content-Length': Buffer.byteLength(data)\n        }\n    };\n    \n    try {\n        var httpreq = http.request(options, function(res) {\n            res.setEncoding('utf8');\n            res.on('data', function (chunk) {\n                console.log(\"body: \" + chunk);\n            });\n        });\n        httpreq.write(data);\n        //httpreq.end();\n    }\n    catch(err) {\n        console.log(\"Err : \" + err.message);\n    }\n    \n};"]],"start1":0,"start2":0,"length1":0,"length2":1394}]],"length":1394,"saved":false}
